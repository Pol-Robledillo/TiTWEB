{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Top 10 Games\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topGames, game => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: game.id\n    }, \" Points: \" + _toDisplayString(game.points) + \", Enemies Killed: \" + _toDisplayString(game.enemies_killed) + \", Level: \" + _toDisplayString(game.level) + \", Date: \" + _toDisplayString(game.date), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","topGames","game","key","id","_toDisplayString","points","enemies_killed","level","date"],"sources":["E:\\TimeIsTickingVue\\tit-web\\src\\components\\TopGames.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Top 10 Games</h3>\r\n      <ul>\r\n        <li v-for=\"game in topGames\" :key=\"game.id\">\r\n          Points: {{ game.points }}, Enemies Killed: {{ game.enemies_killed }}, Level: {{ game.level }}, Date: {{ game.date }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        topGames: [],\r\n        message: '',\r\n        isError: false,\r\n      };\r\n    },\r\n    async created() {\r\n      await this.fetchTopGames();\r\n    },\r\n    methods: {\r\n      async fetchTopGames() {\r\n        try {\r\n          const response = await axios.get('https://83bcce6f-98e3-4e59-9aae-4ce96a077b84-00-1zzaaw12iwr1m.picard.replit.dev/games/top');\r\n          if (response.data) {\r\n            this.topGames = response.data;\r\n          } else {\r\n            this.message = response.data.error;\r\n            this.isError = true;\r\n          }\r\n        } catch (error) {\r\n          this.message = 'An error occurred. Please try again later.';\r\n          this.isError = true;\r\n          console.error('Error:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  </style>\r\n  "],"mappings":";gCAEMA,mBAAA,CAAqB,YAAjB,cAAY;;uBADlBC,mBAAA,CAOM,cANJC,UAAqB,EACrBF,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKE,SAAA,QANbC,WAAA,CAI2BC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAfN,mBAAA,CAEK;MAFyBO,GAAG,EAAED,IAAI,CAACE;OAAI,WAClC,GAAAC,gBAAA,CAAGH,IAAI,CAACI,MAAM,IAAG,oBAAkB,GAAAD,gBAAA,CAAGH,IAAI,CAACK,cAAc,IAAG,WAAS,GAAAF,gBAAA,CAAGH,IAAI,CAACM,KAAK,IAAG,UAAQ,GAAAH,gBAAA,CAAGH,IAAI,CAACO,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}