{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-113dcd3e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Player Stats\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Top 10 Games\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.playerStats ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, \"Max Points: \" + _toDisplayString($data.playerStats.max_points), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Total Points: \" + _toDisplayString($data.playerStats.total_points), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Max Enemies Killed: \" + _toDisplayString($data.playerStats.max_enemies_killed), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Total Enemies Killed: \" + _toDisplayString($data.playerStats.total_enemies_killed), 1 /* TEXT */), _hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.topGames, game => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: game.id\n    }, \" Points: \" + _toDisplayString(game.points) + \", Enemies Killed: \" + _toDisplayString(game.enemies_killed) + \", Level: \" + _toDisplayString(game.level) + \", Date: \" + _toDisplayString(game.date), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","_createElementVNode","$data","playerStats","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","max_points","total_points","max_enemies_killed","total_enemies_killed","_hoisted_3","_Fragment","_renderList","topGames","game","id","points","enemies_killed","level","date","_createCommentVNode"],"sources":["C:\\Users\\polro\\Desktop\\Personal\\DAMv\\Proyecto\\TiTWEB\\tit-web\\src\\components\\PlayerStats.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"playerStats\">\r\n      <h3>Player Stats</h3>\r\n      <p>Max Points: {{ playerStats.max_points }}</p>\r\n      <p>Total Points: {{ playerStats.total_points }}</p>\r\n      <p>Max Enemies Killed: {{ playerStats.max_enemies_killed }}</p>\r\n      <p>Total Enemies Killed: {{ playerStats.total_enemies_killed }}</p>\r\n  \r\n      <h3>Top 10 Games</h3>\r\n      <ul>\r\n        <li v-for=\"game in topGames\" :key=\"game.id\">\r\n          Points: {{ game.points }}, Enemies Killed: {{ game.enemies_killed }}, Level: {{ game.level }}, Date: {{ game.date }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    props: ['username'],\r\n    data() {\r\n      return {\r\n        playerStats: null,\r\n        topGames: [],\r\n        message: '',\r\n        isError: false,\r\n      };\r\n    },\r\n    watch: {\r\n      username: 'fetchData'\r\n    },\r\n    methods: {\r\n      async fetchData() {\r\n        if (!this.username) {\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const [statsResponse, gamesResponse] = await Promise.all([\r\n            axios.get(`https://83bcce6f-98e3-4e59-9aae-4ce96a077b84-00-1zzaaw12iwr1m.picard.replit.dev/players/stats/${this.username}`),\r\n            axios.get('https://83bcce6f-98e3-4e59-9aae-4ce96a077b84-00-1zzaaw12iwr1m.picard.replit.dev/games/top')\r\n          ]);\r\n  \r\n          if (statsResponse.status === 200) {\r\n            this.playerStats = statsResponse.data;\r\n          } else {\r\n            this.message = statsResponse.data.error;\r\n            this.isError = true;\r\n          }\r\n  \r\n          if (gamesResponse.status === 200) {\r\n            this.topGames = gamesResponse.data;\r\n          } else {\r\n            this.message = gamesResponse.data.error;\r\n            this.isError = true;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          this.message = 'An error occurred. Please try again later.';\r\n          this.isError = true;\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .error-message {\r\n    color: red;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EAAAA,GAAA;AAAA;gEAEMC,mBAAA,CAAqB,YAAjB,cAAY;gEAMhBA,mBAAA,CAAqB,YAAjB,cAAY;;SAPPC,KAAA,CAAAC,WAAW,I,cAAtBC,mBAAA,CAaM,OAdVC,UAAA,GAEMC,UAAqB,EACrBL,mBAAA,CAA+C,WAA5C,cAAY,GAAAM,gBAAA,CAAGL,KAAA,CAAAC,WAAW,CAACK,UAAU,kBACxCP,mBAAA,CAAmD,WAAhD,gBAAc,GAAAM,gBAAA,CAAGL,KAAA,CAAAC,WAAW,CAACM,YAAY,kBAC5CR,mBAAA,CAA+D,WAA5D,sBAAoB,GAAAM,gBAAA,CAAGL,KAAA,CAAAC,WAAW,CAACO,kBAAkB,kBACxDT,mBAAA,CAAmE,WAAhE,wBAAsB,GAAAM,gBAAA,CAAGL,KAAA,CAAAC,WAAW,CAACQ,oBAAoB,kBAE5DC,UAAqB,EACrBX,mBAAA,CAIK,c,kBAHHG,mBAAA,CAEKS,SAAA,QAZbC,WAAA,CAU2BZ,KAAA,CAAAa,QAAQ,EAAhBC,IAAI;yBAAfZ,mBAAA,CAEK;MAFyBJ,GAAG,EAAEgB,IAAI,CAACC;OAAI,WAClC,GAAAV,gBAAA,CAAGS,IAAI,CAACE,MAAM,IAAG,oBAAkB,GAAAX,gBAAA,CAAGS,IAAI,CAACG,cAAc,IAAG,WAAS,GAAAZ,gBAAA,CAAGS,IAAI,CAACI,KAAK,IAAG,UAAQ,GAAAb,gBAAA,CAAGS,IAAI,CAACK,IAAI;wCAX3HC,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}