{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: ['username'],\n  data() {\n    return {\n      playerStats: null,\n      topGames: [],\n      message: '',\n      isError: false\n    };\n  },\n  watch: {\n    username: 'fetchData'\n  },\n  methods: {\n    async fetchData() {\n      if (!this.username) {\n        return;\n      }\n      try {\n        const [statsResponse, gamesResponse] = await Promise.all([axios.get(`http://backend-server-ip:port/players/stats/${this.username}`), axios.get('http://backend-server-ip:port/games/top')]);\n        if (statsResponse.status === 200) {\n          this.playerStats = statsResponse.data;\n        } else {\n          this.message = statsResponse.data.error;\n          this.isError = true;\n        }\n        if (gamesResponse.status === 200) {\n          this.topGames = gamesResponse.data;\n        } else {\n          this.message = gamesResponse.data.error;\n          this.isError = true;\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        this.message = 'An error occurred. Please try again later.';\n        this.isError = true;\n      }\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","props","data","playerStats","topGames","message","isError","watch","username","methods","fetchData","statsResponse","gamesResponse","Promise","all","get","status","error","console","mounted"],"sources":["C:\\Users\\polro\\Desktop\\Personal\\DAMv\\Proyecto\\TiTWEB\\tit-web\\src\\components\\PlayerStats.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"playerStats\">\r\n      <h3>Player Stats</h3>\r\n      <p>Max Points: {{ playerStats.max_points }}</p>\r\n      <p>Total Points: {{ playerStats.total_points }}</p>\r\n      <p>Max Enemies Killed: {{ playerStats.max_enemies_killed }}</p>\r\n      <p>Total Enemies Killed: {{ playerStats.total_enemies_killed }}</p>\r\n  \r\n      <h3>Top 10 Games</h3>\r\n      <ul>\r\n        <li v-for=\"game in topGames\" :key=\"game.id\">\r\n          Points: {{ game.points }}, Enemies Killed: {{ game.enemies_killed }}, Level: {{ game.level }}, Date: {{ game.date }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    props: ['username'],\r\n    data() {\r\n      return {\r\n        playerStats: null,\r\n        topGames: [],\r\n        message: '',\r\n        isError: false,\r\n      };\r\n    },\r\n    watch: {\r\n      username: 'fetchData'\r\n    },\r\n    methods: {\r\n      async fetchData() {\r\n        if (!this.username) {\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const [statsResponse, gamesResponse] = await Promise.all([\r\n            axios.get(`http://backend-server-ip:port/players/stats/${this.username}`),\r\n            axios.get('http://backend-server-ip:port/games/top')\r\n          ]);\r\n  \r\n          if (statsResponse.status === 200) {\r\n            this.playerStats = statsResponse.data;\r\n          } else {\r\n            this.message = statsResponse.data.error;\r\n            this.isError = true;\r\n          }\r\n  \r\n          if (gamesResponse.status === 200) {\r\n            this.topGames = gamesResponse.data;\r\n          } else {\r\n            this.message = gamesResponse.data.error;\r\n            this.isError = true;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n          this.message = 'An error occurred. Please try again later.';\r\n          this.isError = true;\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchData();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .error-message {\r\n    color: red;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAkBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,UAAU,CAAC;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAACF,QAAQ,EAAE;QAClB;MACF;MAEA,IAAI;QACF,MAAM,CAACG,aAAa,EAAEC,aAAa,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvDd,KAAK,CAACe,GAAG,CAAE,+CAA8C,IAAI,CAACP,QAAS,EAAC,CAAC,EACzER,KAAK,CAACe,GAAG,CAAC,yCAAyC,EACpD,CAAC;QAEF,IAAIJ,aAAa,CAACK,MAAK,KAAM,GAAG,EAAE;UAChC,IAAI,CAACb,WAAU,GAAIQ,aAAa,CAACT,IAAI;QACvC,OAAO;UACL,IAAI,CAACG,OAAM,GAAIM,aAAa,CAACT,IAAI,CAACe,KAAK;UACvC,IAAI,CAACX,OAAM,GAAI,IAAI;QACrB;QAEA,IAAIM,aAAa,CAACI,MAAK,KAAM,GAAG,EAAE;UAChC,IAAI,CAACZ,QAAO,GAAIQ,aAAa,CAACV,IAAI;QACpC,OAAO;UACL,IAAI,CAACG,OAAM,GAAIO,aAAa,CAACV,IAAI,CAACe,KAAK;UACvC,IAAI,CAACX,OAAM,GAAI,IAAI;QACrB;MACF,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAACZ,OAAM,GAAI,4CAA4C;QAC3D,IAAI,CAACC,OAAM,GAAI,IAAI;MACrB;IACF;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,SAAS,CAAC,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}